{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "82ac72a1-b9cc-4e2d-951c-6b0d951389f9": {
        "id": "82ac72a1-b9cc-4e2d-951c-6b0d951389f9",
        "parent": null,
        "name": "hiru1009_merge",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "01b5aabc-b6cf-4948-b528-df03260ff1aa",
          "d0e43261-9e74-4d2a-9998-07bff568cd41"
        ],
        "isRemovable": false,
        "filePath": "hiru1009_merge"
      },
      "01b5aabc-b6cf-4948-b528-df03260ff1aa": {
        "id": "01b5aabc-b6cf-4948-b528-df03260ff1aa",
        "parent": "82ac72a1-b9cc-4e2d-951c-6b0d951389f9",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hiru1009_merge/lambda.js",
        "code": "let SL_AWS = require('slappforge-sdk-aws');\nlet connectionManager = require('./ConnectionManager');\nconst rds = new SL_AWS.RDS(connectionManager);\n\nexports.handler = function (event, context, callback) {\n\n    // You must always end/destroy the DB connection after it's used\n    rds.beginTransaction({\n        instanceIdentifier: 'K'\n    }, function (error, connection) {\n        if (error) {\n            throw error;\n        }\n    });\n    //test 123\n    callback(null, { \"message\": \"Successfully executed\" });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusEast1TestAPIMyLambdaput",
            "config": {}
          },
          {
            "resourceName": "apigusEast1sachithraAPInameindunilany",
            "config": {}
          }
        ],
        "testCases": {
          "58cd44a7-2e04-45dd-9db1-cf6239f80d78": {
            "id": "58cd44a7-2e04-45dd-9db1-cf6239f80d78",
            "name": "Test event",
            "functionId": "01b5aabc-b6cf-4948-b528-df03260ff1aa",
            "event": "{\r\n    \"jobId\": \"38fd08ce-5f5e-434c-8997-6bba5e3f5a74\"\r\n}",
            "eventTemplate": "batch-submit-job"
          }
        }
      },
      "d0e43261-9e74-4d2a-9998-07bff568cd41": {
        "id": "d0e43261-9e74-4d2a-9998-07bff568cd41",
        "parent": "82ac72a1-b9cc-4e2d-951c-6b0d951389f9",
        "name": "ConnectionManager.js",
        "type": "JS_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "hiru1009_merge/ConnectionManager.js",
        "code": "module.exports = function() {\n    this.dbConnections = [];\n\n    this.dbConnections[\"K\"] = {\n        host: process.env.EndPoint_rdsK,\n        port: process.env.Port_rdsK,\n        user: process.env.User_rdsK,\n        password: process.env.Password_rdsK,\n        database: \"k\"\n    };\n};"
      }
    },
    "rootNode": "82ac72a1-b9cc-4e2d-951c-6b0d951389f9",
    "openFiles": [
      "01b5aabc-b6cf-4948-b528-df03260ff1aa"
    ],
    "currentFileId": "01b5aabc-b6cf-4948-b528-df03260ff1aa",
    "resources": {
      "apigusEast1TestAPIMyLambdaput": {
        "name": "apigusEast1TestAPIMyLambdaput",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "TestAPI",
          "apiId": "0itznun7w3",
          "endpointType": "EDGE",
          "rootResourceId": "h2lelj6j7k",
          "existingResources": {
            "/MyLambda": "98nqbj",
            "/": "h2lelj6j7k",
            "/newchange/test": "k6pdhn",
            "/newchange": "q1ox7l",
            "/testWithSlash": "q4m4g1",
            "/testtwospeciallambda": "q4szm3",
            "/testtwospecialkumutest": "wey3lk"
          },
          "resourceMode": 1,
          "resourcePath": "/MyLambda",
          "resourceName": "MyLambda",
          "resourceId": "98nqbj",
          "restMethod": "PUT",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "test12",
          "stageDeploymentId": "6c2pru",
          "mode": 1
        }
      },
      "apigusEast1sachithraAPInameindunilany": {
        "name": "apigusEast1sachithraAPInameindunilany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "sachithraAPIname",
          "apiId": "052p9kjn18",
          "endpointType": "REGIONAL",
          "rootResourceId": "zrjp6rdv3b",
          "existingResources": {
            "/indunil": "gv2c1w",
            "/indunil/qa/tst/u": "o19eth",
            "/indunil/qa/tst": "r6hp77",
            "/indunil/qa": "yptvr5",
            "/": "zrjp6rdv3b"
          },
          "resourceMode": 1,
          "resourcePath": "/indunil",
          "resourceName": "indunil",
          "resourceId": "gv2c1w",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "test11",
          "stageDeploymentId": "5oosz2",
          "mode": 1
        }
      },
      "rds-K": {
        "name": "rds-K",
        "type": "RDS",
        "config": {
          "editMode": false,
          "operation": 1,
          "rdsInstance": {
            "rdsEngineType": "mysql",
            "rdsEdition": "",
            "rdsInstanceSpec": {
              "dbInstanceClass": "db.m4.xlarge",
              "dbLicenseModel": "general-public-license",
              "dbEngineVersion": "5.7.17"
            },
            "rdsSetting": {
              "instanceIdentifier": "K",
              "masterUsername": "K",
              "masterPassword": "kkkkkkkkk"
            },
            "rdsDBOptions": {
              "dbName": "k",
              "dbPort": "7823"
            },
            "rdsInstanceArn": "",
            "Host": "",
            "doesExist": false,
            "initializationQuery": "",
            "alreadyDeployed": false
          },
          "rdsInstanceResources": [],
          "projectRegion": "us-east-1",
          "mode": 0,
          "additionalFiles": [],
          "params": {
            "query": "",
            "inserts": ""
          },
          "isGlobalEditMode": false,
          "enableInject": true,
          "isNewFromGlobal": false
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": null
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "all",
        "varKey": "hiru",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": true
      }
    ],
    "packageJSON": {
      "dependencies": {
        "jimp": {
          "name": "jimp",
          "language": "javascript",
          "version": "0.8.0",
          "dev": false,
          "notRemovable": false
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "hiru1009_merge",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1568116836831
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "hiru1009_merge",
      "url": "https://github.com/HirudineeADRT/hiru1009_merge"
    }
  }
}